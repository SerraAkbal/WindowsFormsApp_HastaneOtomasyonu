<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAsbgwALG4MBuwuTBusLkwUrC5MQmwuTEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwuTAAsLkwgLC5MPuwuTDrsLkwfrG6MRCxuTEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALC5MACwuTCnsLkw/7C5MP+wuTD4sLkwobC4
        MCGwtS4AsME4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLkwALC5MKewuTD/sLkw/7C5
        MP+wuTD+sLkwwrG6MDihwSkAtLMzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACwuTAAsLkwp7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw2LG5MFSwty8EsbgvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAArrkvAK65LwawuTAjsLkwMbC5
        MDCwuTC4sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw67C5MHmwuTAysLkwMbC5MDGwuTAxsLkwMbC5
        MDGwuTAxsLkwMbC5MDGwuTAxsLkwMbC5MDGwuTAxsLkwMbC5MDGwuTAjsLgwBrG4MACwuC8KsLkwdrC5
        MN2wuTDzsLkw9LC5MPuwuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw+7C5MPSwuTD0sLkw9LC5
        MPSwuTD0sLkw9LC5MPSwuTD0sLkw9LC5MPSwuTD0sLkw9LC5MPSwuTD0sLkw87C5MN2wuTB2sLkxCrC6
        MFGwuTDssLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MOuwuTFQsLkwgrC5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7G6
        MP+xuzD/srsw/7K7MP+yuzD/sbsw/7G6MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MIGwuTCGsLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+ttjD/naYu/5KaLf+PmC3/j5gt/4+YLf+Smi3/nKUu/6y1MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkwhrC5MIawuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+xujD/pK0v/3+HLP91fSv/e4Ms/32FLP99hSz/fYUs/3yELP91fiv/fYYs/6KrL/+xuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTCGsLkwhrC5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/6exL/95giv/goos/6StL/+utzD/sLow/7C6MP+wujD/r7cw/6auL/+EjS3/eIAs/6av
        L/+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MIawuTCGsLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/jZYt/3qDLP+rtC//sbow/7C5MP+wuTD/sLkw/7C5MP+wuTD/sbow/621
        MP99hSz/ipIt/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkwhrC5MIawuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/663MP96giz/k5su/7G6MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sbow/5efLv94gSv/rLUw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTCGsLkwhrC5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/rbYw/3R8K/+cpC7/sbow/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+xujD/oKgv/3J7K/+qszD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MIawuTCGsLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+ttS//cnsq/5ylLv+xujD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7G6MP+hqS//cnor/6qzMP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkwhrC5MIawuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+vuS//sLkw/7C4N/98gzb/oqo3/7K7
        M/+vuS7/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sbow/6GpL/9yeiv/qrMw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTCGsLkwhrC5MP+wuTD/sLkw/7C5MP+wuTD/sLkv/7nAR//Nz3v/2tid/9bS
        qf/a16T/09OJ/8DFWP+xujL/sLkw/7C5MP+wuTD/sLkw/7C5MP+xujD/oakv/3J6K/+qszD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MIawuTCGsLkw/7C5MP+wuTD/sLkw/7C5MP/Bxlz/39um/9jX
        lv/GyWj/vsRU/8LGXv/S0YX/4Nyr/83Oef+yuzX/sLkw/7C5MP+wuTD/sLkw/7G6MP+hqS//cnor/6qz
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkwhrC5MIawuTD/sLkw/7C5MP+vuS7/vMJP/+Dc
        qv/KzHT/srs2/6+4Lv+vuC7/r7gu/7C5MP+/xFf/39yp/8nMcP+wuTD/sLkw/7C5MP+wuTD/sbow/6Gp
        L/9yeiv/qrMw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTCGsLkwhrC5MP+wuTD/sLkw/7G6
        NP/V1Y//0tOI/7G6M/+wuS//sLkw/7C5MP+wuTD/sLkw/6+4Lv/EyGL/39yo/7i/Rf+wuS//sLkw/7C5
        MP+wui//oKkt/3F5Kv+qsy7/sLkv/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MIawuTCGsLkw/7C5
        MP+vuS7/ucBH/97bp/++w1L/r7ku/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkv/7S8Ov/a2Jz/x8pq/6+4
        Lv+wuTD/sLkv/7rBS//Kyn//wL6P/8nLdv+3vkH/sLkv/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkwhrC5
        MIawuTD/sLkw/6+4Lv++xFT/4Nyq/7W8PP+wuS//sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/9PT
        iv/P0ID/r7gt/7C5L/+7wk7/4d6v/+7nzf/w6c//7ebL/9vZnv+2vkD/sLkv/7C5MP+wuTD/sLkw/7C5
        MP+wuTCGsLkwhrC5MP+wuTD/r7gt/7/EV//g3Kv/s7s3/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+vuC3/0tKG/9LShv+vuC3/sLkx/9PTiv/u587/5t/F/93Xu//p4sj/7OXK/8rMcf+vuC7/sLkw/7C5
        MP+wuTD/sLkw/7C5MIawuTCGsLkw/7C5MP+vuC3/v8RX/+Dcq/+zuzf/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/6+4Lf/S0ob/0tKG/6+4Lf+xujP/3dqi/+7nz//Y0rf/ycOm/9/Zvf/u58//0tKI/6+4
        Lv+wuTD/sLkw/7C5MP+wuTD/sLkwhrC5MIawuTD/sLkw/6+4Lf+/xFf/4N2r/7K6Nf+vuC7/r7gw/7C5
        MP+wuTD/sLkw/6+4MP+vuC//rrcr/9LShf/S0ob/r7gt/7C5Mf/V1I3/7ufO/+Tew//b1bn/6OHH/+zm
        y//KzXT/r7gu/7C5MP+wuTD/sLkw/7C5MP+wuTCGsLkwhrC5MP+wuTD/r7gu/7zCTv/h3a7/y811/6ux
        SP+Rmyr/pK0u/7G6MP+rtC//lJ4r/5ylN//EyGf/3dqj/8zNdv+vuC7/sLkv/73DUv/j37T/7ufO/+/n
        z//u583/3duk/7e+Q/+wuS//sLkw/7C5MP+wuTD/sLkw/7C5MIawuTCGsLkw/7C5MP+wuTD/sro0/8jL
        bv/c2Z//sbVh/4iSKP+epy3/sbow/6ixL/+Llin/mqFB/9jWm//R0YX/tr5A/7C5L/+wuTD/sLkw/73C
        UP/S0oj/2tib/8/Qfv+5v0X/sLkv/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkwhrC5MIWwuTD/sLkw/7C5
        MP+wuTD/sLkv/7C5Mf+rtDD/pq8u/622L/+wuTD/r7gw/6exL/+osS//sLkx/7C5MP+wuS//sLkw/7C5
        MP+wuTD/sLkv/7C5MP+wuTH/sLkv/7C5L/+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTCFsbkwabC5
        MPewuTD/sLkw/7C5MP+wuTD/sLkw/7G6MP+xujD/sLkw/7C5MP+wuTD/sbow/7G6MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw97C5
        MGixuDAcsLkwq7C5MPmwuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5MP+wuTD/sLkw/7C5
        MPmwuTCrr7kvG7O0LQCxuTAcsbkwabC5MIawuTCGsLkwhrC5MIawuTCGsLkwhrC5MIawuTCGsLkwhrC5
        MIawuTCGsLkwhrC5MIawuTCGsLkwhrC5MIawuTCGsLkwhrC5MIawuTCGsLkwhrC5MIawuTCGsLkwhrC5
        MIawuTCGsLkwabC5LxuwvS4A+H////g////4H///+A////gD//+AAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAE=
</value>
  </data>
</root>